// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AntourageViewer
import AVFoundation
import Foundation
import Network
import Swift
import UIKit
import _Concurrency
import os.log
import os
import zlib
@_inheritsConvenienceInitializers @objc(ANTWidget) @_Concurrency.MainActor(unsafe) public class Widget : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public var portalColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var nameTextColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var nameBackgroundColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var titleTextColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var titleBackgroundColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var ctaTextColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var ctaBackgroundColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var liveDotColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreGraphics.CGSize {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func willMove(toWindow newWindow: UIKit.UIWindow?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func point(inside point: CoreGraphics.CGPoint, with event: UIKit.UIEvent?) -> Swift.Bool
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class Antourage : ObjectiveC.NSObject {
  @objc public static let senderID: Swift.String
  @objc public static let shared: AntourageViewer.Antourage
  @objc public func configure(teamID: Swift.Int)
  @objc public func configure(teamID: Swift.Int, localization: Swift.String)
  @objc public func registerForRemoteNotifications(fcmToken: Swift.String, completion: @escaping (Swift.String?) -> Swift.Void)
  @objc public func unregisterForRemoteNotifications(completion: @escaping (Swift.Bool) -> Swift.Void)
  public func presentChangeHostAlert(from viewController: UIKit.UIViewController)
  @objc deinit
}
